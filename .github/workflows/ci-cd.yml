name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Check code formatting with Black
      run: |
        pip install black
        black . --check
        
    - name: Run Flake8
      run: |
        pip install flake8
        flake8 . --count --show-source --statistics
        
    - name: Run Type Checking with MyPy
      run: |
        pip install mypy
        mypy hermanitto_docs_api/
        
    - name: Run Tests with Coverage
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        ALGORITHM: HS256
        ACCESS_TOKEN_EXPIRE_MINUTES: 30
        PYTHONPATH: ${{ github.workspace }}
      run: |
        pytest --cov=hermanitto_docs_api --cov-report=xml -v
        
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v3
    #   with:
    #     file: ./coverage.xml
    #     fail_ci_if_error: true

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to production
      run: |
        echo "Deploy would happen here"
      # Aqui você adicionaria os passos para deploy em produção
      # Por exemplo, deploy para AWS, Heroku, etc.
